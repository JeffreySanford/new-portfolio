@use '@angular/material' as mat;
@use '@angular/material/theming' as mat-theming;
@import './colors';

@import url('https://fonts.googleapis.com/icon?family=Material+Icons');
@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400;500;600;700&display=swap');

// Define the palettes using colors from _colors.scss
$red-palette: mat-theming.define-palette((
  500: $primary-red,
  300: $secondary-red-light,
  700: $secondary-red-dark,
  contrast: (
    500: $primary-white,
    300: $primary-white,
    700: $primary-white
  )
));

$blue-palette: mat-theming.define-palette((
  500: $primary-blue,
  300: $secondary-blue-light,
  700: $secondary-blue-dark,
  contrast: (
    500: $primary-white,
    300: $primary-white,
    700: $primary-white
  )
));

$white-palette: mat-theming.define-palette((
  50: $primary-white,
  100: $secondary-white-light,
  200: $secondary-white-dark,
  contrast: (
    50: $charcoal-grey,
    100: $charcoal-grey,
    200: $charcoal-grey
  )
));

// Define the theme colors
$patriotic-theme: mat-theming.define-light-theme((
  color: (
    primary: $red-palette,
    accent: $blue-palette,
    warn: mat-theming.define-palette(mat-theming.$amber-palette),
    background: $white-palette
  )
));

// Include Angular Material styles
@include mat.all-component-themes($patriotic-theme);

// Define additional color style for header component
$header-theme: (
  color: (
    primary: $red-palette,
    secondary: $secondary-color,
  )
);

// Example usage of the header theme
.header {
  background-color: map-get($header-theme, color, primary);
  color: white; // Assuming you want white text on the charcoal grey background
  padding: 1rem;
  font-family: $font-family;
}

// Define keyframes for the blue and red highlights for the background flag
@keyframes blueHighlight {
  0%, 100% { opacity: 0; }
  50% { opacity: 1; filter: grayscale(0) hue-rotate(240deg); }
}

@keyframes redHighlight {
  0%, 100% { opacity: 0; }
  50% { opacity: 1; filter: grayscale(0) hue-rotate(0deg); }
}

// Apply the animations with the desired timing
.stars-blue {
  animation: blueHighlight 4s ease-in-out;
}

.stars-red {
  animation: redHighlight 4s ease-in-out;
}

// Global styles
html, body {
  height: 100%;
  margin: 0;
  padding: 0;
  overflow-x: hidden; // Prevent horizontal overflow
}

/* Ensure the main content takes up the remaining space */
.main-content {
  min-height: calc(100vh - 100px); /* Adjust 100px to the height of your footer */
  display: flex;
  flex-direction: column;
}

/* Footer styles */
.footer-container {
  display: flex;
  justify-content: space-between;
  padding: 1em;
  background-color: rgba(0, 0, 0, 0.5);
  border-top: 1px solid #dee2e6;
  position: absolute;
  bottom: 0;
  width: 100%;
}

$blue-palette: palette.define-palette(palette.$blue-palette);
$white-palette: palette.define-palette(palette.$grey-palette, 50);

// Define the theme colors
$patriotic-theme: mat.define-light-theme((
  color: (
    primary: $red-palette,
    accent: $blue-palette,
    warn: palette.define-palette(palette.$amber-palette),
    background: $white-palette
  )
));

// Include Angular Material styles
@include mat.all-component-themes($patriotic-theme);

// Define additional color style for header component
$header-theme: (
  color: (
    primary: $red-palette,
    secondary: $secondary-color,
  )
);

// Example usage of the header theme
.header {
  background-color: map-get($header-theme, color, primary);
  color: white; // Assuming you want white text on the charcoal grey background
  padding: 1rem;
  font-family: $font-family;
}

// Define keyframes for the blue and red highlights for the background flag
@keyframes blueHighlight {
  0%, 100% { opacity: 0; }
  50% { opacity: 1; filter: grayscale(0) hue-rotate(240deg); }
}

@keyframes redHighlight {
  0%, 100% { opacity: 0; }
  50% { opacity: 1; filter: grayscale(0) hue-rotate(0deg); }
}

// Apply the animations with the desired timing
.stars-blue {
  animation: blueHighlight 4s ease-in-out;
}

.stars-red {
  animation: redHighlight 4s ease-in-out;
}

// Global styles
body, html {
  margin: 0;
  padding: 0;
  height: 100%;
  display: flex;
  flex-direction: column;
}

.app-container {
  display: flex;
  flex-direction: column;
  height: 100%;
}